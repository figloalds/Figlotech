using Figlotech.Core.BusinessModel;
using System;
using System.Linq;
using System.Runtime.Serialization;

namespace System {
    /// <summary>
    /// <para>EndUserGeneratedException classes represent Exceptions that are generated by the End User trying to do something that
    /// is by design not acceptable or possible for the program to handle.</para>
    /// <para>BusinessValidationException means that the user request failed business validation.</para>
    /// </summary>
    [Serializable]
    public sealed class BusinessValidationException : EndUserGeneratedException {
        public ValidationErrors Errors;

        public static string ErrsToStr(ValidationErrors errors) {
            return String.Join(";\r\n", errors.ToArray().Select(e => $"{e.Key} - {e.Message}"));
        }

        public BusinessValidationException(ValidationErrors errors) : base(400, ErrsToStr(errors)) {
            Errors = errors;
        }

        public BusinessValidationException(string message, ValidationErrors errors = null) : base(400, message) {
            Errors = errors;
        }

        public BusinessValidationException(string message, Exception innerException) : base(400, message, innerException) {
        }

        protected BusinessValidationException(SerializationInfo info, StreamingContext context) : base(400, info, context) {
        }
    }
}